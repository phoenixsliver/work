# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      DB_DATABASE: renren_fast
      DB_USER: root
      DB_PASSWORD: root

    services:
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        mysql -e 'SHOW DATABASES;' -uroot -proot
        chmod +x "./.github/mysql.sql"
        mysql -uroot -proot renren_fast < ./.github/mysql.sql
        mysql -e 'use renren_fast;show tables;' -uroot -proot
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'adopt'
        cache: maven
       #测试中不能有关于数据库的不然要配置在这里配置sql docker
        #maven打包 测试 jar包命名为Package 放到staging目录下
    - name: maven打包 测试
      run: mvn --batch-mode --update-snapshots verify

  packeage:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
#部署到测试服务器
#      - name: Deploy to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          port: 22
#          password: $
#          source: "/staging/Package.jar"
#          target: "/root/"
#          strip_components: 2

#通过ssh给服务器发送命令重启jar包
#      - name: ls -a via ssh
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            cd /tmp
#            ls -a
#          host: ${{ secrets.HOST }}
#          user: root
#          key: ${{ secrets.PRIVATE_KEY}}
